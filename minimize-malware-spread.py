class Solution(object):
    def minMalwareSpread(self, graph, initial):
        colored = set()
        initial_set = set(initial)
        color_data = {} #[4]
        color = 0
        
        def dfs(node, c):
            stack = [node]
            while stack:
                n = stack.pop()
                if n in colored: continue #[1]
                colored.add(n)

                if n in initial_set:
                    color_data[c][0].append(n)
                color_data[c][1]+=1

                for nb in xrange(len(graph)):
                    if graph[n][nb]==1:
                        stack.append(nb)
                
        # [0]
        for node in initial:
            if color not in color_data:
                color_data[color] = [[], 0]

            dfs(node, color)
            color+=1

        ans = min(initial)
        max_infected = float('-inf')
        for c in color_data.keys():
            if len(color_data[c][0])!=1: continue #[3]
            n = color_data[c][0][0]
            infected = color_data[c][1]

            if color_data[c][1]>max_infected: #[2]
                max_infected = infected
                ans = n
            elif infected==max_infected and n<ans:
                ans = n

        return ans
